services:
  jenkins:
    build: ./jenkins
    container_name: jenkins
    user: root
    ports:
      - "${JENKINS_PORT}:8080"
      - "${JENKINS_SLAVE_PORT}:50000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins/plugins.txt:/usr/share/jenkins/ref/plugins.txt
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_ADMIN_ID=${JENKINS_ADMIN_ID}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD}
      - TRY_UPGRADE_IF_NO_MARKER=true
      - INSTALL_PLUGINS_FROM_FILE=/usr/share/jenkins/ref/plugins.txt
      - COLLECTING_METRICS_PERIOD_IN_SECONDS=120
    networks:
      - devops

  ########################
  # SonarQube
  ########################
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "${SONARQUBE_PORT}:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - devops

  edit-sonarqube-password:
    image: alpine:latest
    container_name: edit-sonarqube-password
    depends_on:
      - sonarqube
    entrypoint: >
      /bin/sh -c "
        apk add --no-cache curl && 
        until curl -s http://sonarqube:9000/api/system/health; do
          echo 'Waiting for SonarQube to be ready...';
          sleep 5;
        done && 
        curl -u admin:admin -X POST 'http://sonarqube:9000/api/users/change_password?login=admin&previousPassword=admin&password=+ANJ#KKrtN4S$n_'"
    networks:
      - devops
    restart: "no"
  ########################
  # Nexus (Artifact Repository)
  ########################
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "${NEXUS_PORT}:8081"
      - "8082:8082"
    environment:
      - NEXUS_PROMETHEUS_ENABLED=true
      - INSTALL4J_ADD_VM_PARAMS=-Xms512m -Xmx1024m -XX:MaxDirectMemorySize=2G
    volumes:
      - nexus-data:/nexus-data
      - ./nexus/nexus.properties:/nexus-data/etc/nexus.properties
    networks:
      - devops

  ########################
  # Prometheus
  ########################
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - devops

  ########################
  # Grafana (with Keycloak OAuth)
  ########################
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
      # Keycloak OAuth Configuration
      - GF_AUTH_GENERIC_OAUTH_VERBOSE_LOGGING=true
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Keycloak
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${KEYCLOAK_GRAFANA_CLIENT_SECRET:-grafana-secret}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid email profile
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=http://localhost:${KEYCLOAK_PORT:-8090}/realms/devops/protocol/openid-connect/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=http://keycloak:8080/realms/devops/protocol/openid-connect/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=http://keycloak:8080/realms/devops/protocol/openid-connect/userinfo
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(realm_access.roles[*], 'admin') && 'Admin' || contains(realm_access.roles[*], 'editor') && 'Editor' || 'Viewer'
      - GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH=preferred_username
      - GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH=name
      - GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH=email
      - GF_AUTH_GENERIC_OAUTH_USE_PKCE=false
      - GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE=true
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-dashboards:/var/lib/grafana/dashboards
    depends_on:
      - fetch_dashboards
      - keycloak
    networks:
      - devops

  ########################
  # Keycloak (Authentication & Authorization - H2 Database)
  ########################
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: keycloak
    command: start-dev
    ports:
      - "${KEYCLOAK_PORT:-8090}:8080"
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_HEALTH_ENABLED=true
    volumes:
      - keycloak-data:/opt/keycloak/data
    networks:
      - devops

  ########################
  # Dashboard Init (Alpine container)
  ########################
  fetch_dashboards:
    image: alpine:latest
    container_name: fetch_dashboards
    entrypoint: ["/bin/sh", "/fetch_dashboards.sh"]
    volumes:
      - grafana-dashboards:/dashboards
      - ./grafana/init/fetch_dashboards.sh:/fetch_dashboards.sh
    networks:
      - devops

  ########################
  # Node Exporter (System Metrics)
  ########################
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - devops

  ########################
  # MySQL Database
  ########################
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - devops

  # ########################
  # # Spring Boot App (built by Jenkins, pulled from Nexus)
  # ########################
  backend-app:
    image: ${NEXUS_DOCKER_URL:-nexus:8081}/kaddem:${APP_VERSION:-latest}
    container_name: backend-app
    ports:
      - "8088:8080"
      - "8089:8089"
    depends_on:
      - mysql
    networks:
      - devops
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/kaddemdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME:-root}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD:-root}
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - MANAGEMENT_ENDPOINT_METRICS_ENABLED=true
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true

volumes:
  jenkins_home:
  grafana-storage:
  grafana-dashboards:
  nexus-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  mysql-data:
  keycloak-data:

networks:
  devops:
